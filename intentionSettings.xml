<application>
  <component name="IntentionManagerSettings">
    <ignoreAction name="EJB/Add EJB interceptor" />
    <ignoreAction name="EJB/Add Method to EJB Class" />
    <ignoreAction name="EJB/Add Method to EJB Interface" />
    <ignoreAction name="EJB/Interceptor Bindings" />
    <ignoreAction name="FreeMarker/Change macro call style" />
    <ignoreAction name="FreeMarker/Create dynamic method or property" />
    <ignoreAction name="FreeMarker/Create macro or function from usage" />
    <ignoreAction name="FreeMarker/Define implicit variable in comment" />
    <ignoreAction name="FreeMarker/Define template root" />
    <ignoreAction name="FreeMarker/Specify class to take toplevel properties and methods from" />
    <ignoreAction name="Google Web Toolkit/Create @UiField for tag" />
    <ignoreAction name="Grails/Create action" />
    <ignoreAction name="Grails/Create view (GSP page)" />
    <ignoreAction name="Grails/Extract selected text to message.properties" />
    <ignoreAction name="Grails/Make property nullable" />
    <ignoreAction name="Grails/Make property unique" />
    <ignoreAction name="Groovy/Grab" />
    <ignoreAction name="Groovy/Closures/Make Closure Call Explicit" />
    <ignoreAction name="Groovy/Closures/Make Closure Call Implicit" />
    <ignoreAction name="Groovy/Closures/Replace Each With For-In" />
    <ignoreAction name="Groovy/Closures/Replace For-In With Each" />
    <ignoreAction name="Groovy/Comments/Replace With C-Style Comment" />
    <ignoreAction name="Groovy/Control Flow/Add constructor parameter for field" />
    <ignoreAction name="Groovy/Control Flow/DeMorgan's Law" />
    <ignoreAction name="Groovy/Control Flow/Expand Boolean" />
    <ignoreAction name="Groovy/Control Flow/Flip Comparison Operands" />
    <ignoreAction name="Groovy/Control Flow/Flip Conditional" />
    <ignoreAction name="Groovy/Control Flow/Flip Conjunction Operands" />
    <ignoreAction name="Groovy/Control Flow/Flip if statements" />
    <ignoreAction name="Groovy/Control Flow/Invert 'if' condition" />
    <ignoreAction name="Groovy/Control Flow/Merge Else If" />
    <ignoreAction name="Groovy/Control Flow/Merge Nested Ifs To ANDed Condition" />
    <ignoreAction name="Groovy/Control Flow/Negate Comparison" />
    <ignoreAction name="Groovy/Control Flow/Remove redundant 'else' keyword" />
    <ignoreAction name="Groovy/Control Flow/Replace ''?:'' with if else" />
    <ignoreAction name="Groovy/Control Flow/Replace if-statement with ternary operator" />
    <ignoreAction name="Groovy/Control Flow/Simplify Conditional Expression" />
    <ignoreAction name="Groovy/Control Flow/Split Else If" />
    <ignoreAction name="Groovy/Control Flow/Split into 2 if's" />
    <ignoreAction name="Groovy/Declaration/Create field for parameter" />
    <ignoreAction name="Groovy/Declaration/Declare explicit type" />
    <ignoreAction name="Groovy/Declaration/Groovy Introduce local variable" />
    <ignoreAction name="Groovy/Declaration/Implement abstract class or interface" />
    <ignoreAction name="Groovy/Declaration/Make 'private'" />
    <ignoreAction name="Groovy/Declaration/Make 'protected'" />
    <ignoreAction name="Groovy/Declaration/Make 'public'" />
    <ignoreAction name="Groovy/Declaration/Remove explicit type declaration" />
    <ignoreAction name="Groovy/Expression conversions/Break string on '\n'" />
    <ignoreAction name="Groovy/Expression conversions/Cast to char" />
    <ignoreAction name="Groovy/Expression conversions/Convert GString To String" />
    <ignoreAction name="Groovy/Expression conversions/Convert Groovy native map to class instances" />
    <ignoreAction name="Groovy/Expression conversions/Convert Indexing Method To [] Form" />
    <ignoreAction name="Groovy/Expression conversions/Convert JUnit assertion to assert statement" />
    <ignoreAction name="Groovy/Expression conversions/Convert Java-Style Array Creation to Groovy Syntax" />
    <ignoreAction name="Groovy/Expression conversions/Convert String Concatenation to GString" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Binary" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Decimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Hexadecimal" />
    <ignoreAction name="Groovy/Expression conversions/Convert To Octal" />
    <ignoreAction name="Groovy/Expression conversions/Convert [] Form To Index Method" />
    <ignoreAction name="Groovy/Expression conversions/Convert cast expression to safe cast expression" />
    <ignoreAction name="Groovy/Expression conversions/Convert literal to multiline literal" />
    <ignoreAction name="Groovy/Expression conversions/Convert method to property of closure type" />
    <ignoreAction name="Groovy/Expression conversions/Convert multiline string to single-line" />
    <ignoreAction name="Groovy/Expression conversions/Convert property to method" />
    <ignoreAction name="Groovy/Expression conversions/Convert simple getter to property" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to dollar-slashy string" />
    <ignoreAction name="Groovy/Expression conversions/Convert string literal to regular expression" />
    <ignoreAction name="Groovy/Expression conversions/Move class to separate file" />
    <ignoreAction name="Groovy/Expression conversions/Remove Unnecessary Braces in GString" />
    <ignoreAction name="Groovy/Expression conversions/Remove Unnecessary Parentheses from Method Call" />
    <ignoreAction name="Groovy/Expression conversions/Remove unnecessary escape characters" />
    <ignoreAction name="Groovy/Expression conversions/Rename file to corresponding class name" />
    <ignoreAction name="Groovy/Expression conversions/Split Variable Declaration" />
    <ignoreAction name="Groovy/Groovy-style/Add On Demand Static Import in Groovy" />
    <ignoreAction name="Groovy/Groovy-style/Add Single-Member Static Import in Groovy" />
    <ignoreAction name="Groovy/Groovy-style/Add return type to method declaration" />
    <ignoreAction name="Groovy/Groovy-style/Change Java-style accessor invocation to Groovy-style property reference" />
    <ignoreAction name="Groovy/Groovy-style/Change anonymous class to dynamic instantiation" />
    <ignoreAction name="Groovy/Groovy-style/Convert method or closure parameters to map entries" />
    <ignoreAction name="Groovy/Groovy-style/Format braces in separate lines" />
    <ignoreAction name="Groovy/Groovy-style/Format closing closure braces in one line" />
    <ignoreAction name="Groovy/Groovy-style/Remove redundant .class" />
    <ignoreAction name="Groovy/Groovy-style/Remove unnecessary 'return' keyword" />
    <ignoreAction name="Groovy/Groovy-style/Remove unnecessary semicolons from selected text" />
    <ignoreAction name="Groovy/Other/Alias import statically imported member" />
    <ignoreAction name="Groovy/Other/Create missing 'switch' branches" />
    <ignoreAction name="Groovy/Other/Sort map entries alphabetically" />
    <ignoreAction name="Guice/Move Binding Scope To Class" />
    <ignoreAction name="Guice/Move Binding To Class" />
    <ignoreAction name="Guice/Move Provider Binding To Class" />
    <ignoreAction name="Guice/Toggle Injection Required" />
    <ignoreAction name="JavaFX/Collapse tag to attribute" />
    <ignoreAction name="JavaFX/Expand attribute to tag" />
    <ignoreAction name="JavaFX/Switch to W3C CSS" />
    <ignoreAction name="JavaFX/Use binary css file" />
    <ignoreAction name="Kotlin/Add 'const' modifier" />
    <ignoreAction name="Kotlin/Add 'operator' modifier" />
    <ignoreAction name="Kotlin/Add 'replaceWith' argument to 'Deprecated' annotation" />
    <ignoreAction name="Kotlin/Add braces" />
    <ignoreAction name="Kotlin/Add explicit type arguments" />
    <ignoreAction name="Kotlin/Add import for member" />
    <ignoreAction name="Kotlin/Add indices to 'for' loop" />
    <ignoreAction name="Kotlin/Add name to argument" />
    <ignoreAction name="Kotlin/Add val/var to primary constructor parameter" />
    <ignoreAction name="Kotlin/Change file's package to match directory" />
    <ignoreAction name="Kotlin/Change package" />
    <ignoreAction name="Kotlin/Convert anonymous function to lambda expression" />
    <ignoreAction name="Kotlin/Convert concatenation to template" />
    <ignoreAction name="Kotlin/Convert function to property" />
    <ignoreAction name="Kotlin/Convert member to extension" />
    <ignoreAction name="Kotlin/Convert object literal to lambda" />
    <ignoreAction name="Kotlin/Convert parameter to receiver" />
    <ignoreAction name="Kotlin/Convert property initializer to getter" />
    <ignoreAction name="Kotlin/Convert property to function" />
    <ignoreAction name="Kotlin/Convert receiver to parameter" />
    <ignoreAction name="Kotlin/Convert template to concatenated string" />
    <ignoreAction name="Kotlin/Convert to block body" />
    <ignoreAction name="Kotlin/Convert to expression body" />
    <ignoreAction name="Kotlin/Create test" />
    <ignoreAction name="Kotlin/DeMorgan Law" />
    <ignoreAction name="Kotlin/Eliminate argument of 'when'" />
    <ignoreAction name="Kotlin/Flatten 'when' expression" />
    <ignoreAction name="Kotlin/Flip binary expression" />
    <ignoreAction name="Kotlin/Implement abstract member" />
    <ignoreAction name="Kotlin/Import members with '*'" />
    <ignoreAction name="Kotlin/Insert curly braces around variable" />
    <ignoreAction name="Kotlin/Introduce argument to 'when'" />
    <ignoreAction name="Kotlin/Introduce backing property" />
    <ignoreAction name="Kotlin/Invert 'if' condition" />
    <ignoreAction name="Kotlin/Iterate over collection" />
    <ignoreAction name="Kotlin/Make internal" />
    <ignoreAction name="Kotlin/Make private" />
    <ignoreAction name="Kotlin/Make protected" />
    <ignoreAction name="Kotlin/Make public" />
    <ignoreAction name="Kotlin/Merge 'when' expressions" />
    <ignoreAction name="Kotlin/Move assignment to initializer" />
    <ignoreAction name="Kotlin/Move declaration to separate file" />
    <ignoreAction name="Kotlin/Move file to package-matching directory" />
    <ignoreAction name="Kotlin/Move lambda argument into parentheses" />
    <ignoreAction name="Kotlin/Move lambda argument out of parentheses" />
    <ignoreAction name="Kotlin/Move out of companion object" />
    <ignoreAction name="Kotlin/Move to companion object" />
    <ignoreAction name="Kotlin/Remove argument name" />
    <ignoreAction name="Kotlin/Remove braces" />
    <ignoreAction name="Kotlin/Remove curly braces" />
    <ignoreAction name="Kotlin/Remove explicit lambda parameter types (may break code)" />
    <ignoreAction name="Kotlin/Remove explicit supertype qualification" />
    <ignoreAction name="Kotlin/Remove explicit type arguments" />
    <ignoreAction name="Kotlin/Remove explicit type specification" />
    <ignoreAction name="Kotlin/Remove indices in 'for' loop" />
    <ignoreAction name="Kotlin/Remove unnecessary parentheses" />
    <ignoreAction name="Kotlin/Replace '!!' expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace 'assert' with 'if' statement" />
    <ignoreAction name="Kotlin/Replace 'contains' call with 'in' operator" />
    <ignoreAction name="Kotlin/Replace 'get' or 'set' call with indexing operator" />
    <ignoreAction name="Kotlin/Replace 'if' expression with '!!' expression" />
    <ignoreAction name="Kotlin/Replace 'if' expression with assignment" />
    <ignoreAction name="Kotlin/Replace 'if' expression with elvis expression" />
    <ignoreAction name="Kotlin/Replace 'if' expression with return" />
    <ignoreAction name="Kotlin/Replace 'if' expression with safe access expression" />
    <ignoreAction name="Kotlin/Replace 'if' with 'assert' statement" />
    <ignoreAction name="Kotlin/Replace 'if' with 'when'" />
    <ignoreAction name="Kotlin/Replace 'if' with elvis operator" />
    <ignoreAction name="Kotlin/Replace 'invoke' with direct call" />
    <ignoreAction name="Kotlin/Replace 'it' with explicit parameter" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'dropLast' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'substringAfter' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'substringBefore' call" />
    <ignoreAction name="Kotlin/Replace 'substring' call with 'take' call" />
    <ignoreAction name="Kotlin/Replace 'when' expression with assignment" />
    <ignoreAction name="Kotlin/Replace 'when' expression with return" />
    <ignoreAction name="Kotlin/Replace 'when' with 'if'" />
    <ignoreAction name="Kotlin/Replace assert with '!!' or '?:'" />
    <ignoreAction name="Kotlin/Replace assignment with 'if' expression" />
    <ignoreAction name="Kotlin/Replace assignment with 'when' expression" />
    <ignoreAction name="Kotlin/Replace by reconstructed type" />
    <ignoreAction name="Kotlin/Replace call with binary operator" />
    <ignoreAction name="Kotlin/Replace call with unary operator" />
    <ignoreAction name="Kotlin/Replace elvis expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace explicit lambda parameter with 'it'" />
    <ignoreAction name="Kotlin/Replace infix call with ordinary call" />
    <ignoreAction name="Kotlin/Replace negated sequence with DeMorgan equivalent" />
    <ignoreAction name="Kotlin/Replace overloaded operator with function call" />
    <ignoreAction name="Kotlin/Replace property initializer with 'if' expression" />
    <ignoreAction name="Kotlin/Replace property initializer with 'when' expression" />
    <ignoreAction name="Kotlin/Replace return with 'if' expression" />
    <ignoreAction name="Kotlin/Replace return with 'when' expression" />
    <ignoreAction name="Kotlin/Replace safe access expression with 'if' expression" />
    <ignoreAction name="Kotlin/Replace with a 'for' loop" />
    <ignoreAction name="Kotlin/Replace with a 'forEach' function call" />
    <ignoreAction name="Kotlin/Replace with infix function call" />
    <ignoreAction name="Kotlin/Replace with operator-assignment" />
    <ignoreAction name="Kotlin/Replace with ordinary assignment" />
    <ignoreAction name="Kotlin/Simplify 'for'" />
    <ignoreAction name="Kotlin/Simplify boolean expression" />
    <ignoreAction name="Kotlin/Simplify negated binary expression" />
    <ignoreAction name="Kotlin/Specify explicit lambda signature" />
    <ignoreAction name="Kotlin/Specify type explicitly" />
    <ignoreAction name="Kotlin/Split if into 2 if's" />
    <ignoreAction name="Kotlin/Split property declaration" />
    <ignoreAction name="Kotlin/Use property access syntax" />
    <ignoreAction name="Ruby/Add @param tag" />
    <ignoreAction name="Ruby/Add @return tag" />
    <ignoreAction name="Ruby/Append current directory to path" />
    <ignoreAction name="Ruby/Convert ':' to '=&gt;'" />
    <ignoreAction name="Ruby/Convert '=&gt;' to ':'" />
    <ignoreAction name="Ruby/Convert 'do' block to { }" />
    <ignoreAction name="Ruby/Convert all ':' to '=&gt;'" />
    <ignoreAction name="Ruby/Convert all '=&gt;' to ':'" />
    <ignoreAction name="Ruby/Convert concatenation of strings to substitutions #{}" />
    <ignoreAction name="Ruby/Convert if/then/else/end block to ternary operator" />
    <ignoreAction name="Ruby/Convert modifier to statement" />
    <ignoreAction name="Ruby/Convert relative path to absolute" />
    <ignoreAction name="Ruby/Convert statement to modifier" />
    <ignoreAction name="Ruby/Convert string to symbol" />
    <ignoreAction name="Ruby/Convert symbol to string" />
    <ignoreAction name="Ruby/Convert ternary operator to if/then/else/end block" />
    <ignoreAction name="Ruby/Convert to camel case dot reference" />
    <ignoreAction name="Ruby/Convert to dot reference" />
    <ignoreAction name="Ruby/Convert to erb comment" />
    <ignoreAction name="Ruby/Convert to ruby call style" />
    <ignoreAction name="Ruby/Convert { } to 'do' block" />
    <ignoreAction name="Ruby/I18n string value" />
    <ignoreAction name="Ruby/Import Java class" />
    <ignoreAction name="Struts 2/Create validation.xml" />
    <ignoreAction name="TypeScript/Generate reference path comment" />
    <ignoreAction name="TypeScript/Make 'private'" />
    <ignoreAction name="TypeScript/Make 'protected'" />
    <ignoreAction name="TypeScript/Make 'public'" />
    <ignoreAction name="XSLT/Add optional Argument(s)" />
    <ignoreAction name="XSLT/Convert if to choose" />
    <ignoreAction name="XSLT/Inline xsl:attribute" />
    <ignoreAction name="XSLT/Replace with xsl:attribute" />
    <ignoreAction name="WebLogic/Create EJB" />
    <ignoreAction name="Google Web Toolkit/Create @UiHandler for tag" />
    <ignoreAction name="JavaFX/Switch CSS dialect" />
    <ignoreAction name="CoffeeScript/Replace Double-Quoted String with Single-Quoted String" />
    <ignoreAction name="CoffeeScript/Replace Single-Quoted String with Double-Quoted String" />
    <ignoreAction name="Cucumber/Convert scenario to outline" />
    <ignoreAction name="Kotlin/Add '@JvmOverloads' annotation" />
    <ignoreAction name="Kotlin/Create Kotlin subclass" />
    <ignoreAction name="Kotlin/Introduce local variable" />
    <ignoreAction name="Kotlin/Move to build&gt;sourceDirectory tag" />
    <ignoreAction name="Kotlin/Move to compile execution" />
    <ignoreAction name="Kotlin/To ordinary string literal" />
    <ignoreAction name="Kotlin/To raw string literal" />
    <ignoreAction name="Ruby/Convert heredoc to squiggly heredoc" />
    <ignoreAction name="Ruby/Replace safe navigation with chained calls conjunction" />
    <ignoreAction name="Ruby/Replace safe navigation with nested nil checks" />
    <ignoreAction name="TypeScript/Remove type declaration" />
    <ignoreAction name="TypeScript/Specify variable type explicitly" />
  </component>
</application>